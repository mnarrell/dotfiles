set nocompatible

set encoding=utf-8

source $DOTFILES/topics/vim/plugins.vim

filetype plugin on

set backspace=indent,eol,start

let mapleader = ","
nmap ; :

" set scrolloff=3
" set showcmd
" set showmode
" set modelines=1
" set shortmess=atI
set visualbell
" set autoread
set nowrap
set incsearch
" set smartcase
set nohlsearch

" set clipboard=unnamed

" Invisible characters *******************************************************
set listchars=trail:.,tab:>-,eol:$
set nolist
noremap <Leader>i :set list!<CR> " Toggle invisible chars

" Tabs ***********************************************************************
set softtabstop=2
set shiftwidth=2
set tabstop=2
set expandtab
set smarttab

" Indents ********************************************************************
set autoindent
set smartindent
set cindent
set copyindent

set hidden            " allow for editied buffers in the background
set cursorline
set nowrap
set ruler             " show the cursor position all the time
set showcmd           " display incomplete commands
set showmatch

set foldlevelstart=20 " Don't start folded
set history=1000      " keep 50 lines of command line history
set undolevels=1000
set wildmode=list:longest
set wildignore=*.swp,*.bak,*.pyc,*.class,target

set nobackup          " do not keep a backup file, use versions instead
set noswapfile

" Eyecandy
syntax on
filetype plugin indent on

" Status line
set laststatus=2
set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P

set background=dark
colorscheme jellybeans

let g:airline_powerline_fonts = 1
let g:airline_theme='powerlineish'



let g:unite_source_history_yank_enable = 1
call unite#filters#matcher_default#use(['matcher_fuzzy'])
nnoremap <C-u> :Unite -toggle -auto-resize -buffer-name=mixed -start-insert file_rec/async:! buffer<cr>
" nnoremap <Leader>F :Unite -no-split -buffer-name=files  -start-insert file<CR>
nnoremap <Leader>f :Unite -no-split -buffer-name=files  -start-insert file_rec/async:!<CR>
nnoremap <Leader>r :Unite -no-split -buffer-name=files  file_mru<CR>
nnoremap <Leader>y :Unite -no-split -buffer-name=yank   history/yank<CR>
" nnoremap <Leader>b :Unite -no-split -buffer-name=buffer buffer<CR>
nnoremap <Leader>g :Unite -no-split -buffer-name=grep   grep:.<CR>

let g:unite_source_file_rec_ignore_pattern=
 \'\%(^\|/\)\.$\|\~$\|\.\%(o\|exe\|dll\|ba\?k\|sw[po]\|tmp\)$\|\%(^\|/\)\.\%(hg\|git\|bzr\|svn\|jruby\|idea\|vagrant\)\%($\|/\)\|node_modules'


" Managing splits
" http://technotales.wordpress.com/2010/04/29/vim-splits-a-guide-to-doing-exactly-what-you-want/
set noea
nmap <leader><left> :leftabove vsp<CR>
nmap <leader><right> :rightbelow vsp<CR>
nmap <leader><up> :leftabove sp<CR>
nmap <leader><down> :rightbelow sp<CR>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

noremap  <Up> ""
noremap! <Up> <Esc>
noremap  <Down> ""
noremap! <Down> <Esc>
noremap  <Left> ""
noremap! <Left> <Esc>
noremap  <Right> ""
noremap! <Right> <Esc>

" Toggle line numbers
nmap <Leader>NL :set invnumber<CR>

" Toggle search highlights
nmap <Leader>HL :set invhlsearch<CR>

set pastetoggle=<F2>

" GitV mappings.  Awesome
nnoremap <S-h> gT
nnoremap <S-l> gt

" Ctrl-D to quit buffer
nnoremap <C-D> :bd!<CR>

" Programmery ***************************************************************

let g:syntastic_check_on_open=0
let g:syntastic_enable_balloons=0
let g:syntastic_enable_signs=1

" gitv
nnoremap <Leader>gV :Gitv --all<CR>
nnoremap <Leader>gv :Gitv! --all<CR>

" Filetype stuff
au FileType make set noexpandtab
au BufRead,BufNewFile {Gemfile,Rakefile,Vagrantfile,Thorfile,config.ru} set ft=ruby
au BufRead,BufNewFile *.{md,markdown,mdown,mkd,mkdn} set ft=markdown
au BufNewFile,BufRead *.json set ft=javascript

" Save a file as root.
cabbrev w!! w !sudo tee % > /dev/null<CR>:e!<CR><CR>

" Quicker filetype setting:
"   :F html
" instead of
"   :set ft=html
" Can tab-complete filetype.
if version < 730
  command! -nargs=1 F set filetype=<args>
else
  command! -nargs=1 -complete=filetype F set filetype=<args>
endif

" NERDCommenter
" let g:NERDCreateDefaultMappings=0
let NERDSpaceDelims=1
map <leader>/ <plug>NERDCommenterToggle<CR>
imap <leader>/ <Esc><plug>NERDCommenterToggle<CR>i
map <Leader>[ <plug>NERDCommenterAlignLeft
map <Leader>] <plug>NERDCommenterUncomment

" format JSON
map <leader>jt <Esc>:%!json_xs -f json -t json-pretty<CR>

" Format XML
function! DoPrettyXML()
  let l:origft = &ft
  set ft=
  silent %!xmllint --format -
  1
  exe "set ft=" . l:origft
endfunction
command! PrettyXML call DoPrettyXML()
