#!/usr/bin/env bash

################################################################################
# Basics
cd "$(dirname "$0")" || exit
DOTFILES_ROOT=$(pwd -P)


################################################################################
# Print an informational msg:  [ OK ]: ...
info() {
  # shellcheck disable=SC2059
  printf "\r  [ \033[00;34m..\033[0m ] $1\n"
}


################################################################################
success() {
  # shellcheck disable=SC2059
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}


################################################################################
fail() {
  # shellcheck disable=SC2059
  printf "\r\033[2K  [ \033[0;31mFAIL\033[0m ]  $1\n"
  echo ''
  exit
}


################################################################################
# Create a symbolic link.  If the destination file exists, move it to .backup.
link_file() {
  if [ -e "$2" ]; then
    if [ "$(readlink "$2")" = "$1" ]; then
      success "skipped $1"
      return 0
    else
      mv "$2" "$2.backup"
      success "moved $2 to $2.backup"
    fi
  fi
  ln -sf "$1" "$2"
  success "linked $1 to $2"
}

################################################################################
# Execute the first argument file.
execute_hooks() {
  info "Executing $1 hooks"
  while read -r installer; do
    sh -c "${installer}" > /dev/null
    success "${installer}..."
  done < <(find -H "${DOTFILES_ROOT}" -name "$1" ! -path '*vim.symlink/tmp/*' ! -path '*.git*')
  echo ''
}

# vim: ft=sh
